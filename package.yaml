AWSTemplateFormatVersion: '2010-09-09'
Description: 'API to collect lab data.

  '
Globals:
  Function:
    Environment:
      Variables:
        BlackListProcess: iexplore.exe,MicrosoftEdgeCP.exe
        GitCommand:
          Ref: GitCommand
        KeybroadEventStream:
          Ref: KeybroadEventStream
        MouseEventStream:
          Ref: MouseEventStream
        RunUnitTest:
          Ref: RunUnitTest
        ScreenshotMetaDataTable:
          Ref: ScreenshotMetaDataTable
        SourceRespositoryName:
          Ref: SourceRespositoryName
        StudentLabDataBucket:
          Ref: StudentLabDataBucket
        StudentMarkingBucket:
          Ref: StudentMarkingBucket
    MemorySize: 512
    Runtime: python3.6
    Timeout: 180
Outputs:
  ApiKey:
    Value:
      Ref: ApiKey
  KeybroadEventStream:
    Value:
      Ref: KeybroadEventStream
  LabCodeCollectorApi:
    Description: API Gateway endpoint URL for Prod stage for LabCodeCollectorFunction
      function
    Value:
      Fn::Sub: https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/code/
  LabCollectorApi:
    Description: API Gateway endpoint URL for Prod stage
    Value:
      Fn::Sub: https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/
  LabEventCollectorApi:
    Description: API Gateway endpoint URL for Prod stage for LabEventCollectorFunction
      function
    Value:
      Fn::Sub: https://${ApiGatewayApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/event/
  MouseEventStream:
    Value:
      Ref: MouseEventStream
  S3BucketSecureURL:
    Description: Name of S3 bucket to hold website content
    Value:
      Fn::Join:
      - ''
      - - https://
        - Fn::GetAtt:
          - StudentMarkingBucket
          - DomainName
  StudentLabDataBucket:
    Value:
      Ref: StudentLabDataBucket
  StudentMarkingBucket:
    Value:
      Ref: StudentMarkingBucket
  StudentPlan:
    Value:
      Ref: StudentPlan
  StudentScreenShotBucket:
    Value:
      Ref: StudentScreenShotBucket
  WebsiteURL:
    Description: URL for website hosted on S3
    Value:
      Fn::GetAtt:
      - StudentMarkingBucket
      - WebsiteURL
Parameters:
  BlackListProcess:
    Default: ''
    Description: Black List Process.
    Type: CommaDelimitedList
  GitCommand:
    Description: Git commands to clone the test code respository.
    Type: String
  RunUnitTest:
    AllowedValues:
    - true
    - false
    Default: true
    Description: Run pytest unittest or not.
    Type: String
  SourceRespositoryName:
    Description: Git test source code respository name.
    Type: String
Resources:
  ApiGatewayApi:
    Properties:
      DefinitionBody:
        components:
          securitySchemes:
            api_key:
              in: header
              name: x-api-key
              type: apiKey
        info:
          title:
            Ref: AWS::StackName
          version: '1.0'
        openapi: 3.0.0
        paths:
          /code:
            post:
              responses: {}
              security:
              - api_key: []
              x-amazon-apigateway-integration:
                httpMethod: POST
                passthroughBehavior: when_no_match
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LabCodeCollectorFunction.Arn}/invocations
          /event:
            post:
              responses: {}
              security:
              - api_key: []
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LabEventCollectorFunction.Arn}/invocations
          /process:
            post:
              responses: {}
              security:
              - api_key: []
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LabProcessCollectorFunction.Arn}/invocations
          /progress/{studentId}/{lab}:
            get:
              parameters:
              - description: Student ID
                in: path
                name: studentId
                required: true
                schema:
                  type: string
              - description: lab number
                in: path
                name: lab
                required: true
                schema:
                  type: string
              responses:
                '200':
                  description: Default response for CORS method
                  headers:
                    Access-Control-Allow-Headers:
                      type: string
                    Access-Control-Allow-Methods:
                      type: string
                    Access-Control-Allow-Origin:
                      type: string
              x-amazon-apigateway-integration:
                httpMethod: POST
                responses:
                  default:
                    responseParameters:
                      method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
                      method.response.header.Access-Control-Allow-Methods: '''*'''
                      method.response.header.Access-Control-Allow-Origin: '''*'''
                    statusCode: '200'
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CheckProgressFunction.Arn}/invocations
          /screenshot:
            get:
              responses: {}
              security:
              - api_key: []
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${LabScreenshotCollectorFunction.Arn}/invocations
          /screenshottext/{studentId}:
            get:
              parameters:
              - description: Student ID
                in: path
                name: studentId
                required: true
                schema:
                  type: string
              responses:
                '200':
                  description: Default response for CORS method
                  headers:
                    Access-Control-Allow-Headers:
                      type: string
                    Access-Control-Allow-Methods:
                      type: string
                    Access-Control-Allow-Origin:
                      type: string
              x-amazon-apigateway-integration:
                httpMethod: POST
                responses:
                  default:
                    responseParameters:
                      method.response.header.Access-Control-Allow-Headers: '''Content-Type,X-Amz-Date,Authorization,X-Api-Key'''
                      method.response.header.Access-Control-Allow-Methods: '''*'''
                      method.response.header.Access-Control-Allow-Origin: '''*'''
                    statusCode: '200'
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${CheckScreenShotTextFunction.Arn}/invocations
        x-amazon-apigateway-api-key-source: HEADER
      StageName: Prod
    Type: AWS::Serverless::Api
  ApiKey:
    DependsOn:
    - ApiGatewayApiProdStage
    Properties:
      Description: '000000000'
      Enabled: 'true'
      Name:
        Fn::Sub: 000000000_${AWS::StackName}
      StageKeys:
      - RestApiId:
          Ref: ApiGatewayApi
        StageName: Prod
    Type: AWS::ApiGateway::ApiKey
  AthenaNamedQueryStudentKeyboardStream:
    DependsOn: TableEvents
    Properties:
      Database:
        Ref: DatabaseEvents
      Description:
        Fn::Sub: ${AWS::StackName} Student Keyboard Stream
      Name:
        Fn::Sub: ${AWS::StackName} Student Keyboard Stream
      QueryString:
        Fn::Sub: 'SELECT distinct(id), array_agg(key)  FROM "studentevents${AWS::StackName}"."event_stream"  WHERE
          name=''KeyPressEvent''  GROUP BY id;

          '
    Type: AWS::Athena::NamedQuery
  CheckProgressFunction:
    Properties:
      CodeUri: s3://fypassignemnt1718/54f2cdc6e737710d8817355786848cbc
      Events:
        LambdaMicroservice:
          Properties:
            Method: GET
            Path: /progress/{studentId}/{lab}
            RestApiId:
              Ref: ApiGatewayApi
          Type: Api
      Handler: check_progress_function.lambda_handler
      Policies:
      - Statement:
        - Action:
          - apigateway:GET
          Effect: Allow
          Resource:
            Fn::Sub: arn:aws:apigateway:${AWS::Region}::/apikeys/*
        - Action:
          - s3:GetObject
          Effect: Allow
          Resource:
          - Fn::Sub: arn:aws:s3:::${StudentMarkingBucket}/*
        - Action:
          - s3:ListObjects
          Effect: Allow
          Resource:
          - Fn::Sub: arn:aws:s3:::${StudentMarkingBucket}/*
        Version: '2012-10-17'
    Type: AWS::Serverless::Function
  CheckScreenShotTextFunction:
    Properties:
      CodeUri: s3://fypassignemnt1718/54f2cdc6e737710d8817355786848cbc
      Events:
        LambdaMicroservice:
          Properties:
            Method: GET
            Path: /screenshottext/{studentId}
            RestApiId:
              Ref: ApiGatewayApi
          Type: Api
      Handler: check_screenshot_function.lambda_handler
      Policies:
      - Statement:
        - Action:
          - dynamodb:GetItem
          Effect: Allow
          Resource:
            Fn::Sub: arn:aws:dynamodb:*:*:table/${ScreenshotMetaDataTable}
        Version: '2012-10-17'
    Type: AWS::Serverless::Function
  DatabaseEvents:
    Properties:
      CatalogId:
        Ref: AWS::AccountId
      DatabaseInput:
        Description: Student Event Stream
        Name:
          Fn::Sub: studentevents${AWS::StackName}
    Type: AWS::Glue::Database
  KeybroadEventStream:
    Properties:
      Name: KeybroadEventStream
      RetentionPeriodHours: 24
      ShardCount: 1
    Type: AWS::Kinesis::Stream
  LabCodeCollectorFunction:
    Properties:
      CodeUri: s3://fypassignemnt1718/54f2cdc6e737710d8817355786848cbc
      Events:
        LambdaMicroservice:
          Properties:
            Method: POST
            Path: /code
            RestApiId:
              Ref: ApiGatewayApi
          Type: Api
      Handler: collect_code_function.lambda_handler
      MemorySize: 2048
      Policies:
      - AWSCodeCommitReadOnly
      - Statement:
        - Action:
          - apigateway:GET
          Effect: Allow
          Resource:
            Fn::Sub: arn:aws:apigateway:${AWS::Region}::/apikeys/*
        - Action:
          - s3:PutObject
          Effect: Allow
          Resource:
          - Fn::Sub: arn:aws:s3:::${StudentLabDataBucket}/*
          - Fn::Sub: arn:aws:s3:::${StudentMarkingBucket}/*
        - Action:
          - s3:PutObjectAcl
          Effect: Allow
          Resource:
          - Fn::Sub: arn:aws:s3:::${StudentMarkingBucket}/*
        Version: '2012-10-17'
    Type: AWS::Serverless::Function
  LabEventCollectorFunction:
    Properties:
      CodeUri: s3://fypassignemnt1718/54f2cdc6e737710d8817355786848cbc
      Events:
        LambdaMicroservice:
          Properties:
            Method: POST
            Path: /event
            RestApiId:
              Ref: ApiGatewayApi
          Type: Api
      Handler: collect_event_function.lambda_handler
      Policies:
      - Statement:
        - Action:
          - apigateway:GET
          Effect: Allow
          Resource:
            Fn::Sub: arn:aws:apigateway:${AWS::Region}::/apikeys/*
        - Action:
          - s3:PutObject
          Effect: Allow
          Resource:
          - Fn::Sub: arn:aws:s3:::${StudentLabDataBucket}/*
          - Fn::Sub: arn:aws:s3:::${StudentMarkingBucket}/*
        - Action:
          - kinesis:PutRecords
          Effect: Allow
          Resource:
          - Fn::Sub: arn:aws:kinesis:${AWS::Region}:${AWS::AccountId}:stream/${KeybroadEventStream}
          - Fn::Sub: arn:aws:kinesis:${AWS::Region}:${AWS::AccountId}:stream/${MouseEventStream}
        Version: '2012-10-17'
    Type: AWS::Serverless::Function
  LabProcessCollectorFunction:
    Properties:
      CodeUri: s3://fypassignemnt1718/54f2cdc6e737710d8817355786848cbc
      Events:
        LambdaMicroservice:
          Properties:
            Method: POST
            Path: /process
            RestApiId:
              Ref: ApiGatewayApi
          Type: Api
      Handler: collect_process_function.lambda_handler
      Policies:
      - Statement:
        - Action:
          - apigateway:GET
          Effect: Allow
          Resource:
            Fn::Sub: arn:aws:apigateway:${AWS::Region}::/apikeys/*
        - Action:
          - s3:PutObject
          Effect: Allow
          Resource:
          - Fn::Sub: arn:aws:s3:::${StudentLabDataBucket}/*
          - Fn::Sub: arn:aws:s3:::${StudentMarkingBucket}/*
        - Action:
          - s3:PutObjectAcl
          Effect: Allow
          Resource:
          - Fn::Sub: arn:aws:s3:::${StudentMarkingBucket}/*
        Version: '2012-10-17'
    Type: AWS::Serverless::Function
  LabScreenshotCollectorFunction:
    Properties:
      CodeUri: s3://fypassignemnt1718/54f2cdc6e737710d8817355786848cbc
      Environment:
        Variables:
          StudentScreenShotBucket:
            Ref: StudentScreenShotBucket
      Events:
        LambdaMicroservice:
          Properties:
            Method: GET
            Path: /screenshot
            RestApiId:
              Ref: ApiGatewayApi
          Type: Api
      Handler: collect_screenshot_function.lambda_handler
      Policies:
      - AWSLambdaExecute
      - Statement:
        - Action:
          - apigateway:GET
          Effect: Allow
          Resource:
            Fn::Sub: arn:aws:apigateway:${AWS::Region}::/apikeys/*
        - Action:
          - s3:*
          Effect: Allow
          Resource:
          - Fn::Sub: arn:aws:s3:::${StudentMarkingBucket}/*
        Version: '2012-10-17'
    Type: AWS::Serverless::Function
  MouseEventStream:
    Properties:
      Name: MouseEventStream
      RetentionPeriodHours: 24
      ShardCount: 1
    Type: AWS::Kinesis::Stream
  ProcessScreenshotFunction:
    Properties:
      CodeUri: s3://fypassignemnt1718/54f2cdc6e737710d8817355786848cbc
      Events:
        ScreenshotUpload:
          Properties:
            Bucket:
              Ref: StudentScreenShotBucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                - Name: prefix
                  Value: screenshot/
                - Name: suffix
                  Value: .jpg
          Type: S3
      Handler: process_screenshot_function.lambda_handler
      Policies:
      - AWSLambdaExecute
      - AmazonRekognitionReadOnlyAccess
      - Statement:
        - Action:
          - dynamodb:PutItem
          Effect: Allow
          Resource:
            Fn::Sub: arn:aws:dynamodb:*:*:table/${ScreenshotMetaDataTable}
        - Action:
          - s3:GetObject
          Effect: Allow
          Resource: '*'
        Version: '2012-10-17'
    Type: AWS::Serverless::Function
  ScreenshotMetaDataTable:
    Properties:
      PrimaryKey:
        Name: id
        Type: String
      TableName:
        Fn::Sub: ScreenShotMetaData${AWS::StackName}
    Type: AWS::Serverless::SimpleTable
  StudentLabDataBucket:
    Type: AWS::S3::Bucket
  StudentMarkingBucket:
    Properties:
      AccessControl: PublicRead
      WebsiteConfiguration:
        ErrorDocument: error.html
        IndexDocument: index.html
    Type: AWS::S3::Bucket
  StudentPlan:
    DependsOn:
    - ApiGatewayApiProdStage
    Properties:
      ApiStages:
      - ApiId:
          Ref: ApiGatewayApi
        Stage: Prod
      Description: Student Plan 50000 requests per day
      Quota:
        Limit: 50000
        Period: DAY
      Throttle:
        BurstLimit: 20
        RateLimit: 10
      UsagePlanName:
        Ref: AWS::StackName
    Type: AWS::ApiGateway::UsagePlan
  StudentScreenShotBucket:
    Type: AWS::S3::Bucket
  TableEvents:
    DependsOn: DatabaseEvents
    Properties:
      CatalogId:
        Ref: AWS::AccountId
      DatabaseName:
        Ref: DatabaseEvents
      TableInput:
        Description: Event from students.
        Name: event_stream
        Parameters:
          classification: json
        PartitionKeys:
        - Name: year
          Type: int
        - Name: month
          Type: int
        - Name: day
          Type: int
        - Name: hour
          Type: int
        - Name: id
          Type: string
        StorageDescriptor:
          Columns:
          - Name: x
            Type: int
          - Name: y
            Type: int
          - Name: dx
            Type: int
          - Name: dy
            Type: int
          - Name: time
            Type: timestamp
          - Name: button
            Type: string
          - Name: pressed
            Type: string
          - Name: key
            Type: string
          - Name: name
            Type: string
          - Name: ip
            Type: string
          - Name: student
            Type: string
          InputFormat: org.apache.hadoop.mapred.TextInputFormat
          Location:
            Fn::Sub: s3://${StudentLabDataBucket}/event_stream
          OutputFormat: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
          SerdeInfo:
            Parameters:
              paths: button,dx,dy,ip,key,name,pressed,student,time,x,y
            SerializationLibrary: org.openx.data.jsonserde.JsonSerDe
        TableType: EXTERNAL_TABLE
    Type: AWS::Glue::Table
  UsagePlanKey:
    Properties:
      KeyId:
        Ref: ApiKey
      KeyType: API_KEY
      UsagePlanId:
        Ref: StudentPlan
    Type: AWS::ApiGateway::UsagePlanKey
Transform: AWS::Serverless-2016-10-31
